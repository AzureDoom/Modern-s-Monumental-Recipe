buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
		maven { url  = 'https://plugins.gradle.org/m2/' }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
        classpath "com.modrinth.minotaur:Minotaur:2.+"
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

apply plugin: 'java'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: "com.modrinth.minotaur"

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: 'official', version: '1.19.2'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'modernrecipes'

            mods {
                modernrecipes {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'modernrecipes'

            mods {
                modernrecipes {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'modernrecipes', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                modernrecipes {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.3.0'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "modernrecipes",
                "Specification-Vendor"    : "AzureDoom",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "AzureDoom",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}

if (file('key.properties').exists()) {
    curseforge {
        def curseProp = new Properties()
        File secretPropsFile = file("key.properties")
        curseProp.load(secretPropsFile.newInputStream())

        project {
            apiKey = curseProp.getProperty('curseKey')
            id = "863339" 
            releaseType = "release"
            changelogType = 'text'
            changelog = file('changelog.txt')
            addGameVersion("1.19.2")
            addGameVersion("Forge")
            addGameVersion("Java 17")
        }
    }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = 'Ty4peQTy' 
		versionNumber = project.mod_version 
		versionName = 'Forge 1.19.2'
		uploadFile = jar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.19.2']
		loaders = ['forge']
	}
}
